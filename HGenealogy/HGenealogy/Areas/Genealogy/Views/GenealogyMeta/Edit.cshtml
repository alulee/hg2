@model HGenealogy.Models.EditGeneMetaViewModel

@{
    ViewBag.Title = "修改族譜";
}

<hr />

<hr />

<h2>編輯族譜</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>族譜基本資料</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.geneMeta.GID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.geneMeta.GID, new { htmlAttributes = new { @class = "form-control" } })

                @if (ViewData.ModelState["GID"] != null)
                {
                    <span class="field-validation-error">
                        @ViewData.ModelState["GID"].Errors[0].ErrorMessage
                    </span>
                }
                else
                {
                    @Html.ValidationMessageFor(model => model.geneMeta.GID, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.geneMeta.GName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.geneMeta.GName, new { htmlAttributes = new { @class = "form-control" } })
                @if (ViewData.ModelState["GName"] != null)
                {
                    <span class="field-validation-error">
                        @ViewData.ModelState["GName"].Errors[0].ErrorMessage
                    </span>
                }
                else
                {
                    @Html.ValidationMessageFor(model => model.geneMeta.GName, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.geneMeta.IsPublic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.geneMeta.IsPublic)
                    @Html.ValidationMessageFor(model => model.geneMeta.IsPublic, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.geneMeta.FamilyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.geneMeta.FamilyName, new { htmlAttributes = new { @class = "form-control" } })
                @if (ViewData.ModelState["FamilyName"] != null)
                {
                    <span class="field-validation-error">
                        @ViewData.ModelState["FamilyName"].Errors[0].ErrorMessage
                    </span>
                }
                else
                {
                    @Html.ValidationMessageFor(model => model.geneMeta.FamilyName, "", new { @class = "text-danger" })
                }
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.geneMeta.OriginalAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.geneMeta.OriginalAddress, new { htmlAttributes = new { @class = "form-control" } })
                @if (ViewData.ModelState["OriginalAddress"] != null)
                {
                    <span class="field-validation-error">
                        @ViewData.ModelState["OriginalAddress"].Errors[0].ErrorMessage
                    </span>
                }
                else
                {
                    @Html.ValidationMessageFor(model => model.geneMeta.OriginalAddress, "", new { @class = "text-danger" })
                }
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.geneMeta.AncestorToTaiwan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.geneMeta.AncestorToTaiwan, new { htmlAttributes = new { @class = "form-control" } })
                @if (ViewData.ModelState["AncestorToTaiwan"] != null)
                {
                    <span class="field-validation-error">
                        @ViewData.ModelState["AncestorToTaiwan"].Errors[0].ErrorMessage
                    </span>
                }
                else
                {
                    @Html.ValidationMessageFor(model => model.geneMeta.AncestorToTaiwan, "", new { @class = "text-danger" })
                }
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.geneMeta.TangName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.geneMeta.TangName, new { htmlAttributes = new { @class = "form-control" } })
                @if (ViewData.ModelState["TangName"] != null)
                {
                    <span class="field-validation-error">
                        @ViewData.ModelState["TangName"].Errors[0].ErrorMessage
                    </span>
                }
                else
                {
                    @Html.ValidationMessageFor(model => model.geneMeta.TangName, "", new { @class = "text-danger" })
                }
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.geneMeta.ZhaoMu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.geneMeta.ZhaoMu, new { htmlAttributes = new { @class = "form-control" } })
                @if (ViewData.ModelState["ZhaoMu"] != null)
                {
                    <span class="field-validation-error">
                        @ViewData.ModelState["ZhaoMu"].Errors[0].ErrorMessage
                    </span>
                }
                else
                {
                    @Html.ValidationMessageFor(model => model.geneMeta.ZhaoMu, "", new { @class = "text-danger" })
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="存檔" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
