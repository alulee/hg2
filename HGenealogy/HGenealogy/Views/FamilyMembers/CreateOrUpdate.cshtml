@using HGenealogy.Models.FamilyMember;
@using HGenealogy.Infrastructure.Extensions;
@model FamilyMemberViewModel


<h2>家族成員資料維護</h2>
<hr />

@using (Ajax.BeginForm("SaveFamilyMember", "FamilyMembers", null, new AjaxOptions
        {
            HttpMethod = "POST",
            UpdateTargetId = "createDialog",
            OnSuccess = "onSaveSuccess",
            OnFailure = "onSaveFail(error)"
        }, new { id = "createForm", role = "form" }))
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        <h4>@ViewBag.Title</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CreatedOnUtc)
        @Html.HiddenFor(model => model.UpdatedOnUtc)
        @Html.HiddenFor(model => model.CreatedWho)
        @Html.HiddenFor(model => model.UpdatedWho)


        <div class="form-group">
            <label class="control-label col-md-2">性別</label>
            <div class="col-md-10">
                <div class="gender-input">
                    <span class="male">
                        @Html.RadioButton("Gender", "M", (Model.Gender == "M"), new { id = "gender-male" })
                        <label class="forcheckbox" for="gender-male">男</label>
                    </span>
                    <span class="female">
                        @Html.RadioButton("Gender", "F", (Model.Gender == "F"), new { id = "gender-female" })
                        <label class="forcheckbox" for="gender-female">女</label>
                    </span>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FamilyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FamilyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FamilyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GivenName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GivenName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GivenName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="inputs date-of-birth">
                <label class="control-label col-md-2">生日</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BirthYear, new { htmlAttributes = new { @class = "birthday-input birthday-input-year", placeholder = "YYYY" } })
                    <span> 年</span>
                    @Html.EditorFor(model => model.BirthMonth, new { htmlAttributes = new { @class = "birthday-input birthday-input-month", placeholder = "MM" } })
                    <span> 月</span>
                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "birthday-input birthday-input-date", placeholder = "DD" } })
                    <span> 日</span>
                </div>
            </div>
        </div>
        <hr />

        <!--地址-->
        <div class="form-group">
            <div class="inputs address">
                <label class="control-label col-md-2">目前居住地</label>
                <div class="col-md-10">
                    @Html.DropDownList("Country", (IEnumerable<SelectListItem>)Model.AvailableCountries, "", new { id = "Countries" })
                    @Html.DropDownList("StateProvice", (IEnumerable<SelectListItem>)Model.AvailableStateProvinces, "", new { id = "StateProvinces" })
                    @Html.DropDownList("City", (IEnumerable<SelectListItem>)Model.AvailableCitis, "", new { id = "Citis" })
                </div>
            </div>
        
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="確認存檔" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("回到成員列表", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">

    $(document).ready(function () {

        $('#Countries').change(function () {

            //alert("country change to " + $(this).val());


        });
    });

    $(function () {
        $("#Countries").change(function () {
            var selectedItem = $(this).val();
            var text = $(this).find('option:selected').text();
            var ddlStates = $("#StateProvinces");
            var statesProgress = $("#states-loading-progress");

            $.ajax({
                cache: false,
                type: "GET",
                url: "@(Url.Action("GetStateProvincesByCountryName", "FamilyMembers"))",
                data: { "countryName": text},
                success: function (data) {
                    ddlStates.html('');
                    $.each(data, function (id, option) {
                        ddlStates.append($('<option></option>').val(option.stateProvinceName).html(option.stateProvinceName));
                    });
                    //statesProgress.hide();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed to retrieve states.');
                    //statesProgress.hide();
                }
            });
        });
    });

</script>